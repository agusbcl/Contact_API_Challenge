// <auto-generated />
using System;
using Challenge.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Challenge.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240105192335_add_data")]
    partial class add_data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Challenge.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ramos Mejia",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "La Plata",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tigre",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Merlo",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cosquin",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Villa General Belgrano",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Mina Clavero",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "San Martin De Los Andes",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 9,
                            Name = "Villa La Angostura",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Centenario",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 11,
                            Name = "Potrerillos",
                            RegionId = 13
                        });
                });

            modelBuilder.Entity("Challenge.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Marshall"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Accenture"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Logitech"
                        },
                        new
                        {
                            Id = 4,
                            Name = "ASUS"
                        });
                });

            modelBuilder.Entity("Challenge.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("WorkPhone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Challenge.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cordoba"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ciudad Autónoma de Buenos Aires"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Catamarca"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Chaco"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Chubut"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Entre Rios"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Corrientes"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Formosa"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Jujuy"
                        },
                        new
                        {
                            Id = 11,
                            Name = "La Pampa"
                        },
                        new
                        {
                            Id = 12,
                            Name = "La Rioja"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Mendoza"
                        });
                });

            modelBuilder.Entity("Challenge.Models.City", b =>
                {
                    b.HasOne("Challenge.Models.Region", "Region")
                        .WithMany("Cities")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Challenge.Models.Contact", b =>
                {
                    b.HasOne("Challenge.Models.City", "City")
                        .WithMany("Contacts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Challenge.Models.Company", "Company")
                        .WithMany("Contacts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Challenge.Models.City", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("Challenge.Models.Company", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("Challenge.Models.Region", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
